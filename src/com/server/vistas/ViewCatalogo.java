/*


 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.server.vistas;

import com.server.modelo.Catalogo;
import com.server.modelo.dao.CatalogoDaoImpl;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import sun.awt.image.ByteArrayImageSource;

/**
 *
 * @author javier
 */
public class ViewCatalogo extends javax.swing.JFrame {

    /**
     * Creates new form ViewCatalogo
     */
    
//    Clases para manejo de la lista y del id temporal
    private List lista;
    private int idTem ;
    private byte [] img = null;
    
    public ViewCatalogo() throws Exception {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.setTitle("Ver Catalogo");
        
//        Obtenemos el listado al cargar el frame
        this.lista = new CatalogoDaoImpl().loadAll();
        
//        Creamos un modelo por defecto
        DefaultTableModel modelo = new DefaultTableModel();
        jtDatos.setModel(modelo);
        
//        Asigmanos el nombre de las columnas que tendra
        modelo.addColumn("Identificador");
        modelo.addColumn("Nombre");
        modelo.addColumn("Descripcion");
        modelo.addColumn("Existencias");
        modelo.addColumn("imagen");
        
//        Recorremos la lista para obtener object de la lista y castear a tipo catalogo por ultimo asigna a la fila los datos
        for (Object obj : lista)
        {
            Catalogo c = (Catalogo)obj;
            Object o[] = new Object[5];
            
            o[0] = c.getId();
            o[1] = c.getNombre();
            o[2] = c.getDescripcion();
            o[3] = c.getExitencias();
            o[4] = c.getImg();
            
            modelo.addRow(o);
            
//            jtDatos.getse
        }
          
//        Vamos a ocultar los campos de id y de la imagen para que no los vea el usuario pero nosotros los vamos a usar 
        jtDatos.getColumnModel().getColumn(0).setMaxWidth(0);
        jtDatos.getColumnModel().getColumn(0).setMinWidth(0);
        jtDatos.getColumnModel().getColumn(0).setPreferredWidth(0);
        
        jtDatos.getColumnModel().getColumn(4).setMaxWidth(0);
        jtDatos.getColumnModel().getColumn(4).setMinWidth(0);
        jtDatos.getColumnModel().getColumn(4).setPreferredWidth(0);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtNombre = new javax.swing.JTextField();
        txtExitencias = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jlIcon = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtDatos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3), "Actualiar", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(255, 255, 255)));
        jPanel1.setOpaque(false);

        txtDescripcion.setColumns(20);
        txtDescripcion.setRows(5);
        jScrollPane2.setViewportView(txtDescripcion);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Descripcion");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Existencias");

        jButton1.setText("Actualizar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtNombre, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                                .addComponent(txtExitencias, javax.swing.GroupLayout.Alignment.LEADING))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(94, 94, 94)
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtExitencias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 320, 250));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3), "Imagen", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(255, 255, 255)));
        jPanel2.setOpaque(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 56, Short.MAX_VALUE)
                .addComponent(jlIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jlIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 210, 220, 170));

        jtDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jtDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtDatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtDatos);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 630, 150));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/F0B.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 680, 460));

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtDatosMouseClicked
            
//        Obtenemos el nomero de la columna seleccionada y sus valores respectivos
        int num = jtDatos.getSelectedRow();
            
        int id = (int)jtDatos.getValueAt(num, 0);
        String nombre = (String) jtDatos.getValueAt(num, 1);
        String descripcion = (String)jtDatos.getValueAt(num, 2);
        long existencias = (long)jtDatos.getValueAt(num, 3);

//        Los agregamos a los textFields
        this.idTem = id;
        txtNombre.setText(nombre);
        txtDescripcion.setText(descripcion);
        txtExitencias.setText(existencias+"");
        
        this.img = (byte[]) jtDatos.getValueAt(num, 4);
        
//        Aqui leemos la imagen y la asigamos jLabel 
        Image imge = createImage(new ByteArrayImageSource(this.img));
        // Obtenemos la escala del jlabel y al final le asignamos el icono.
        Image scaledInstance = imge.getScaledInstance(jlIcon.getWidth()-100, jlIcon.getHeight()-100, Image.SCALE_DEFAULT);
        ImageIcon imageIcon = new ImageIcon(scaledInstance);
        jlIcon.setIcon(imageIcon);
        
//        InputStream in = new ByteArrayInputStream(img);
//        
//        try {
//            BufferedImage imas = ImageIO.read(in);
//            ImageIO.write(imas, "jpg", new File("/home/javier/darksouls.jpg"));
////            Icon icon = null;
////            Graphics2D g2d = imas.createGraphics();
////            icon.paintIcon(null, g2d, 0, 0);
//            jlIcon.setIcon((Icon)imas);
//        } catch (IOException ex) {
//            Logger.getLogger(ViewCatalogo.class.getName()).log(Level.SEVERE, null, ex);
//        }
             
    }//GEN-LAST:event_jtDatosMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        int id = idTem;
        String nombre = txtNombre.getText();
        String descripcion = txtDescripcion.getText();
        long existencias = Long.parseLong(txtExitencias.getText());
        byte[] imagen = this.img;
        Catalogo c = new Catalogo(id, nombre, descripcion, imagen, existencias);
        try {
//            Aqui se actualiza el registro
            new CatalogoDaoImpl().update(c);
            
        
    //     TODO Este bloque es para recargar el jtable
            this.lista = new CatalogoDaoImpl().loadAll();
            DefaultTableModel modelo = new DefaultTableModel();
            jtDatos.setModel(modelo);
            
            modelo.addColumn("Identificador");
            modelo.addColumn("Nombre");
            modelo.addColumn("Descripcion");
            modelo.addColumn("Existencias");
            modelo.addColumn("imagen");

            for (Object obj : lista)
            {
                Catalogo cc = (Catalogo)obj;
                Object o[] = new Object[5];

                o[0] = cc.getId();
                o[1] = cc.getNombre();
                o[2] = cc.getDescripcion();
                o[3] = cc.getExitencias();
                o[4] = cc.getImg();

                modelo.addRow(o);

            }

            jtDatos.getColumnModel().getColumn(0).setMaxWidth(0);
            jtDatos.getColumnModel().getColumn(0).setMinWidth(0);
            jtDatos.getColumnModel().getColumn(0).setPreferredWidth(0);

            jtDatos.getColumnModel().getColumn(4).setMaxWidth(0);
            jtDatos.getColumnModel().getColumn(4).setMinWidth(0);
            jtDatos.getColumnModel().getColumn(4).setPreferredWidth(0);
            
//            TODO Aqui termina la recarga
            
        } catch (Exception ex) {
            Logger.getLogger(ViewCatalogo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jlIcon;
    private javax.swing.JTable jtDatos;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JTextField txtExitencias;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
